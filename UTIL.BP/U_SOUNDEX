SUBROUTINE U_SOUNDEX(OUT_VALUE, IN_VALUE)
** INFORMATION ****************************************************************
* Routine Name   : U_SOUNDEX
*         Type   : SUBROUTINE
*         Params : OUT_VALUE, IN_VALUE
*         Loc    : UTIL.BP
** AUDIT **********************************************************************
* Info Updated   : 20200823 at 12.05.02 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE UTIL.BP I_UTIL.H
   SDEX.NUMERIC.LEN= 6
   SDEX.MASK = '6"0"L'

   SDEX.MATRIX = ""
* A E H I O U W Y are ignored
   SDEX.IGNORE ="AEHIOUWY? '.&óéü":'"':'"':"()-Ááİ�ø"
   SDEX.MATRIX<1>="BFPV"
   SDEX.MATRIX<2>="CGJKQSXZžć"
   SDEX.MATRIX<3>="DT"
   SDEX.MATRIX<4>="L"
   SDEX.MATRIX<5>="MN"
   SDEX.MATRIX<6>="R"
   PROCESS_VALUE = ""
   PROCESS_VALUE = IN_VALUE

   IF IN_VALUE <> "" THEN
      *CALL U_CRT.INFO("INPUT", PROCESS_VALUE)
      *CALL U_CRT.RECORD(SDEX.MATRIX)
      GOSUB PROCESS.SOUNDEX
      * CALL U_CRT.INFO("OUTPUT", OUT_VALUE)
   END
   * CALL U_CRT.INFO("OUTPUT2", OUT_VALUE)

   RETURN

PROCESS.SOUNDEX:

   SOUNDEX.CODE = ""
   PROCESS_VALUE = CONVERT('"  ', "", PROCESS_VALUE)

   OUT_VALUE = PROCESS_VALUE[1, 1]
   *CALL U_CRT.INFO("PROC -2", PROCESS_VALUE)

   PROCESS_VALUE = PROCESS_VALUE[2, 999]
   *CALL U_CRT.INFO("PROC -1", PROCESS_VALUE)

   PROCESS_VALUE = TRIM(CONVERT(SDEX.IGNORE, "", PROCESS_VALUE), " ", "L")

   * TODO - REMOVE DUPLICATES

   OUT_NUMBER = 0
   *CALL U_CRT.INFO("PROC 0", PROCESS_VALUE)

   FOR IDX = 1 TO 6
      *CALL U_CRT.INFO("CONVERT", SDEX.MATRIX<IDX>:U_SEP:IDX:U_SEP:PROCESS_VALUE)
      PROCESS_VALUE = CONVERT(SDEX.MATRIX<IDX>, STR(IDX, LEN(SDEX.MATRIX<IDX>)):"", PROCESS_VALUE)
      *CALL U_CRT.INFO("PROC ":IDX, PROCESS_VALUE)
   NEXT IDX


   PROCESS_VALUE = PROCESS_VALUE[1, SDEX.NUMERIC.LEN]
   * '4"0"R'


   OUT_VALUE = OUT_VALUE:FMT(PROCESS_VALUE, SDEX.MASK)
   *CALL U_CRT.INFO("MASK",SDEX.MASK)
   *CALL U_CRT.INFO("PROCESSED", PROCESS_VALUE)

   RETURN

END
