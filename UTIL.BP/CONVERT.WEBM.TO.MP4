PROGRAM CONVERT.WEBM.TO.MP4
** INFORMATION ****************************************************************
* Routine Name   : CONVERT.WEBM.TO.MP4
*         Type   : SUBROUTINE
*         Params :
*         Loc    : UTIL.BP
** AUDIT **********************************************************************
* Info Updated   : 20200610 at 12.26.25 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE UTIL.BP I_UTIL.H


$INCLUDE UTIL.BP F_CONV.DATA.H

   CALL U_INITIALISE("CONVERT.WEBM.TO.MP4")

* PREP A TEMP FILE TO CONNECT TO A FILEPATH



   STOP.ON.ERROR = @TRUE ; ERROR.TEXT = ""

   PNM="CONVERT.WEBM.TO.MP4"
   CALL U_START(PNM)
   CALL U_HEADER("CONVERT.WEBM.TO.MP4")
   CMD.STRING = CONVERT(SPACE(1), @AM, @SENTENCE)
   IF CMD.STRING<2> = "" THEN
      CALL U_CRT.INFO("ERROR", "Parameters [DIRECTORY] [No. Conversions]")
      CALL U_STOP(PNM)
      STOP
   END

   DEL CMD.STRING<1>
   NO.CONVERSIONS = CMD.STRING<2>
   FILE.PATH = CMD.STRING<1>

   CALL U_IO.GETTEMP(FILE.PATH, FN.TEMP, STOP.ON.ERROR, ERROR.TEXT)

   FN.TEMP.FILE = FN.TEMP ; FV.TEMP.FILE = ""
   CALL U_IO.OPENFILE(FN.TEMP.FILE, FV.TEMP.FILE, STOP.ON.ERROR, ERROR.TEXT)

   FN.CONV.DATA = "CONV.DATA" ; FV.CONV.DATA = ""
   CALL U_IO.OPENFILE(FN.CONV.DATA, FV.CONV.DATA, STOP.ON.ERROR, ERROR.TEXT)

   * CALL U_OS.MSGBOX("INFO", "START", @FALSE)
   CALL U_CRT.INFO("START", "START")

   STMT = "SELECT ":FN.TEMP.FILE
   CALL U_CRT.INFO("STMT", STMT)

   CALL U_OS.EXECUTE(STMT, @FALSE)

   FILE.LIST = ""
   LOOP
      READNEXT ID.FILE ELSE EXIT
      FILE.LIST<-1> = ID.FILE
   REPEAT

   NO.FILES = DCOUNT(FILE.LIST, @AM)

   CALL U_CRT.INFO("NO FILES", NO.FILES)

   FOR THIS.FILE = 1 TO NO.FILES

      FILE.ID = FILE.LIST<THIS.FILE>

      LAST.FOUR = FILE.ID[4]
      IF UPCASE(LAST.FOUR) = "WEBM" THEN
         CALL U_CRT.INFO("FILE", FILE.ID)
         ALREADY.CONVERTED = @FALSE
         GOSUB IS.ALREADY.CONVERTED
         CALL U_CRT.INFO("CONVERTED?", ALREADY.CONVERTED)
         IF NOT(ALREADY.CONVERTED) THEN
            GOSUB CONVERT.FILE
            GOSUB RECORD.AS.CONVERTED
         END
      END



   NEXT THIS.FILE

   CALL U_IO.DELETETEMP(FN.TEMP.FILE, FV.TEMP.FILE, STOP.ON.ERROR, ERROR.TEXT)

   CALL U_CRT.INFO("DONE", "DONE")

   STOP

IS.ALREADY.CONVERTED:
* IN FILE.ID,ALREADY.CONVERTED
   ID.CONV.DATA = FILE.ID
   R.CONV.DATA = ""
   ALREADY.CONVERTED = @FALSE
   STOP.ON.ERROR = @FALSE

   CALL U_IO.READ(FV.CONV.DATA, ID.CONV.DATA, R.CONV.DATA, STOP.ON.ERROR, ERROR.TEXT)

   IF R.CONV.DATA <> "" THEN
      ALREADY.CONVERTED = @TRUE
   END

   RETURN

CONVERT.FILE:
* IN FILE.ID

   TIME.START = MVTIME(EPOCH())

   OS.CMD = ""
   * EXAMPLE for i in *.webm; do ffmpeg -i "$i" "${i%.*}.mp4"; done

   FILE.FROM= FILE.PATH:"":FILE.ID
   FILE.CLEAN = FILE.ID[1, LEN(FILE.ID)-4]:"mp4"
   CONVERT "'" TO "" IN FILE.CLEAN
   CONVERT "(" TO "" IN FILE.CLEAN
   CONVERT ")" TO "" IN FILE.CLEAN
   CONVERT "1" TO "" IN FILE.CLEAN
   CONVERT "+" TO "" IN FILE.CLEAN
   CONVERT "," TO "" IN FILE.CLEAN
   CONVERT " " TO "_" IN FILE.CLEAN
   CONVERT "__" TO "_" IN FILE.CLEAN
   CONVERT "__" TO "_" IN FILE.CLEAN
   FILE.TO = FILE.PATH:"":FILE.CLEAN
   FILE.LOC = FILE.PATH

   CALL U_CRT.INFO("FILE.FROM", FILE.FROM)
   CALL U_CRT.INFO("FILE.TO", FILE.TO)

   OS.CMD := "ffmpeg"
   OS.CMD := " -i ":DQUOTE(FILE.FROM)
   OS.CMD := ""  ;* For command directives
   OS.CMD := " ":DQUOTE(FILE.TO)

   CALL U_CRT.INFO("OS.CMD", OS.CMD)

   CALL U_OS.COMMAND(OS.CMD, @TRUE, "", SUPPRESS.LOG.EVENT)

   TIME.STOP = MVTIME(EPOCH())
   TIME.DURATION = TIME.STOP - TIME.START

   RETURN

RECORD.AS.CONVERTED:
* IN FILE.ID
   ID.CONV.DATA = FILE.ID
   R.CONV.DATA = ""
   R.CONV.DATA<C_DATA_PATH> = FILE.LOC
   R.CONV.DATA<C_DATA_ITEM> = FILE.ID
   R.CONV.DATA<C_DATA_DATE> = OCONV(DATE(), "D4/")
   R.CONV.DATA<C_DATA_TIME> = OCONV(TIME(), ".MTS")
   R.CONV.DATA<C_DATA_START> = TIME.START
   R.CONV.DATA<C_DATA_STOP> = TIME.STOP
   R.CONV.DATA<C_DATA_DURATION> = TIME.DURATION
   R.CONV.DATA<C_DATA_COMMAND> = OS.CMD
   R.CONV.DATA<C_DATA_DEST> = FILE.CLEAN
   * CALL U_CRT.RECORD(R.CONV.DATA)

   CALL U_IO.WRITE(FV.CONV.DATA, ID.CONV.DATA, R.CONV.DATA, STOP.ON.ERROR, ERROR.TEXT)

   RETURN

END
