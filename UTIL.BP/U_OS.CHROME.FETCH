SUBROUTINE U_OS.CHROME.FETCH(URI, VERBOSE, RESULT)
** INFORMATION ****************************************************************
*   Routine Name : U_OS.CHROME.FETCH
*           Type : SUBROUTINE
*         Params : URI, VERBOSE, RESULT
*            Loc : UTIL.BP
** AUDIT **********************************************************************
*   Info Updated : 20200922 at 17.39.44 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE UTIL.BP I_UTIL.H
$INCLUDE UTIL.BP F_UTIL.LOG.EVENT.H



* GOOGLE CHROME FETCH
* -------------------
* Uses a headless google-chrome instance to scrap fully rendered html & data from a uri
* the result is stored and returned to the calling process.

* Get the location of the chrome executable;
   CHROME.LOCATION = "" ; CHROME.DEFAULTS = ""
   CALL U_IO.GET.PROPERTY("util", "chromeLocation", CHROME.LOCATION)
   CALL U_IO.GET.PROPERTY("util", "chromeDefaults", CHROME.DEFAULTS)

   TIME.START = TIME()

   CALL U_CRT.INFO("OS.CHROME.FETCH", "START @ ":OCONV(TIME.START, "MTS."))
   CALL U_CRT.INFO("OS.CHROME.FETCH", URI)

   *HUSH ON


   STMT = CHROME.LOCATION:SPACE(1):CHROME.DEFAULTS:SPACE(1):URI

   OS.EXECUTE STMT CAPTURING RESULT

   * HUSH OFF
   TIME.STOP = TIME()
   TIME.ELAPSED = TIME.STOP - TIME.START

   CALL U_CRT.INFO("OS.CHROME.FETCH", "STOP @ ":OCONV(TIME.START, "MTS."))
   CALL U_CRT.INFO("OS.CHROME.FETCH", "ELAPSED @ ":OCONV(TIME.ELAPSED, "MTS."))

   R.EVENT = ""
   R.EVENT<U_LOG_EVENT> = "CHROME.FETCH"
   R.EVENT<U_LOG_CMD> = STMT
   R.EVENT<U_LOG_MSG> = URI
   R.EVENT<U_LOG_URI> = URI
   R.EVENT<U_LOG_RETCD> = @SYSTEM.RETURN.CODE
   R.EVENT<U_LOG_SUBR> = "U_OS.CHROME.FETCH"
   R.EVENT<U_LOG_START> = OCONV(TIME.START, "MTS.")
   R.EVENT<U_LOG_STOP> = OCONV(TIME.STOP, "MTS.")
   R.EVENT<U_LOG_ELAPSED> = OCONV(TIME.ELAPSED, "MTS.")

   CALL U_LOG.EVENT(RESULT, R.EVENT)

   RETURN
END
