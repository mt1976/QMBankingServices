SUBROUTINE U_IO.WRITE.DRIP(FN.FILEVAR, FV.FILEVAR, ID.RECORD, R.RECORD, STOP.ON.ERROR, ERROR.TEXT)
** INFORMATION ****************************************************************
* Routine Name   : U_IO.WRITE.DRIP
*         Type   : SUBROUTINE
*         Params : FN.FILEVAR, FV.FILEVAR, ID.RECORD, R.RECORD, STOP.ON.ERROR, ERROR.TEXT
*         Loc    : UTIL.BP
** AUDIT **********************************************************************
* Info Updated   : 20200323 at 15.04.38 in MWT-QM-DEV by sales
*                : on ldn-srv-ubnt01 (Linux)
*******************************************************************************

$INSERT UTIL.BP I_UTIL.H



*  WRITE.WAIT.TIME = "" ; WRITE.RETRIES = ""
*  CALL U_IO.GET.PROPERTY("util", "writeWaitTime", WRITE.WAIT.TIME)
*  CALL U_IO.GET.PROPERTY("util", "writeWaitRetries", WRITE.RETRIES)
*  TEST.STMT = "SELECT ":FN.FILEVAR:" WITH @ID =":DQUOTE(ID.RECORD)

*  IF WRITE.WAIT<>"" THEN

*    NO.DROPS = DCOUNT(R.RECORD,@AM)
*    CALL U_CRT.INFO("NO DROPS",NO.DROPS)
*    FOR THIS.DROP = 1 TO NO.DROPS
*      CALL U_CRT.INFO("PROGRESS",THIS.DROP:"/":NO.DROPS)
*      THIS.DROP.DATA = R.RECORD<THIS.DROP>
*      GOSUB DRIP.FEED.FILE
*    NEXT THIS.DROP
*  END ELSE
*    CALL U_IO.WRITE(FV.FILEVAR, ID.RECORD, R.RECORD, STOP.ON.ERROR, ERROR.TEXT)
*  END

   RETURN

*DRIP.FEED.FILE:
* IN THIS.DROP.DATA


*NO.TIMES = 0
*DONE = @FALSE
*LOOP
   *FAILED = @FALSE
*WHILE NOT(DONE)
*  CALL U_OS.EXECUTE(TEST.STMT, @FALSE)
*  DATA.LIST = ""
*  LOOP
*    READNEXT ID.DATA ELSE EXIT
*    DATA.LIST<-1> = ID.DATA
*  REPEAT
*  IF DCOUNT(DATA.LIST) > 0 THEN
** THERE IS ALREADY A FILE PRESENT ON THE FILESYSTEM
*    SLEEP WRITE.WATE.TIME
*  END ELSE
*    DONE = @TRUE
*  END
*  IF NO.TIME>=WRITE.RETRIES THEN
*    DONE = @TRUE
*    FAILED = @TRUE
*  END
*REPEAT

*IF FAILED THEN
*  CALL U_CRT.INFO("WRITE FAILURE","DRIP FEED HASE TIMED OUT/FAILED!")
*END ELSE
*  CALL U_IO.WRITE(FV.FILEVAR, ID.RECORD, THIS.DROP.DATA, STOP.ON.ERROR, ERROR.TEXT)
*END

*RETURN

END
