PROGRAM U_UPDATE.INFO
$INCLUDE UTIL.BP UTIL.H


PNM="UPDATE.INFO"
CMD.STRING = CONVERT(SPACE(1), @AM, @SENTENCE)
IF CMD.STRING<2> = "" THEN
   CALL U_CRT.ACTION("ERROR", "Parameters [A specific BP file]")
   CALL U_STOP(PNM)
   STOP
END

BP.FILE = CMD.STRING<2>

STMT.EX1 = "SELECT ":BP.FILE

FN.UTIL.CONFIG = "UTIL.CONFIG" ; FV.UTIL.CONFIG = "" ; STOP.ON.ERROR = @TRUE ; ERROR.TEXT = ""
CALL U_OPENFILE(FN.UTIL.CONFIG, FV.UTIL.CONFIG, STOP.ON.ERROR, ERROR.TEXT)

FN.UTIL.BP = BP.FILE ; FV.UTIL.BP = "" ; STOP.ON.ERROR = @TRUE ; ERROR.TEXT = ""
CALL U_OPENFILE(FN.UTIL.BP, FV.UTIL.BP, STOP.ON.ERROR, ERROR.TEXT)

ID.UTIL.CONFIG = "codeHeader.txt"
CALL U_READ(FV.UTIL.CONFIG, ID.UTIL.CONFIG, R.UTIL.CONFIG, STOP.ON.ERROR, ERROR.TEXT)

*** translate variables in text to values


CALL U_EXECUTE(STMT.EX1, @TRUE)

PROCESS.LIST = ""
LOOP
   READNEXT ID.FILE ELSE EXIT
   PROCESS.LIST<-1> = ID.FILE
REPEAT
NO.FILES = DCOUNT(PROCESS.LIST,@AM)
FOR I = 1 TO NO.FILES
THIS.PROG = PROCESS.LIST<I>
ID.UTIL.BP = THIS.PROG
CALL U_READ(FV.UTIL.BP, ID.UTIL.BP, R.UTIL.BP, STOP.ON.ERROR, ERROR.TEXT)
* always ingore row one, it will have the subr or
IF R.UTIL.BP<2> =  R.UTIL.CONFIG<1> THEN
* OVERWRITE
FOR J = 1 TO 10
INS.POS = J+1
R.UTIL.BP<INS.POS> = R.UTIL.CONFIG<J>
NEXT J
END ELSE
INS R.UTIL.CONFIG BEFORE R.UTIL.BP<2>
END
CALL U_WRITE(FV.UTIL.BP, THIS.PROG, R.UTIL.BP, STOP.ON.ERROR, ERROR.TEXT)
NEXT I



STOP
END
