SUBROUTINE W_SERVICE.DATAMAP_SAVE(requestItem, requestParameters, msgPayload, responseContent, responseStatus)
** INFORMATION ****************************************************************
*   Routine Name : W_SERVICE.DATAMAP_SAVE
*           Type : SUBROUTINE
*         Params : requestItem, requestParameters, msgPayload, responseContent, responseStatus
*            Loc : UTIL.BP
** AUDIT **********************************************************************
*   Info Updated : 20210228 at 00.39.40 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE UTIL.BP I_UTIL.H
$INCLUDE UTIL.BP I_HTTP.H
$INCLUDE UTIL.BP F_SIENA.TXN.TEMPLATES.H
** DO NOT CHANGE
   PROCESS.NAME=SYSTEM(45) ; ERROR.TEXT = "" ; CALL U_START(PROCESS.NAME)
   CALL U_CRT.INFO(PROCESS.NAME, PROCESS.NAME)
   CALL U_CRT.INFO("requestItem", requestItem) ; CALL U_CRT.INFO("requestParameters", requestParameters) ; CALL U_CRT.INFO("msgPayload", msgPayload)
** DO NOT CHANGE

   IF requestParameters # "" AND msgPayload # "" THEN

      dataMapLookupPrefix = "" ; dataMap.ID = "" ; dataMapLookup.ID = "" ; dataMap.REC = ""
      CALL U_IO.GET.PROPERTY("util", "dataMapLookupPrefix", dataMapLookupPrefix)
      CALL U_CRT.INFO("dataMapLookupPrefix", dataMapLookupPrefix)

      dataMapLookup.ID = dataMapLookupPrefix:DOWNCASE(requestParameters)
      CALL U_CRT.INFO("dataMapLookup.ID", dataMapLookup.ID)
      CALL U_IO.GET.PROPERTY("siena_demo", dataMapLookup.ID, dataMap.ID)
      dataMapFileExtn = ""
      CALL U_IO.GET.PROPERTY("siena_demo", "dataMapFileExtn", dataMapFileExtn)

      dataMap.ID := dataMapFileExtn
      dataMap.REC = msgPayload ; CALL W_CLEAN.PAYLOAD(dataMap.REC)

      *CALL U_CRT.INFO("dataMap.ID", dataMap.ID)
      *CALL U_CRT.INFO("dataMap.REC", dataMap.REC)
      CALL U_IO.WRITE(FV.UTIL.CONFIG, dataMap.ID, dataMap.REC, @FALSE, ERROR.TEXT)
      *CALL U_CRT.INFO("ERROR", ERROR.TEXT)
      *CALL U_CRT.INFO("dataMap.REC", dataMap.REC)

      outputMatrix = ""

      IF ERROR.TEXT <> "" THEN
         responseStatus = RC$BAD.REQUEST
         responseContent = "[{{1}}] Write Failure '{{2}}' '{{3}}' {{4}}"
         CALL U_MSG(responseContent, RC$NO.DATA:@AM:requestItem:@AM:requestParameters:@AM:ERROR.TEXT)
      END ELSE
         responseStatus = RC$OK
         responseContent = outputMatrix
      END

   END ELSE
      responseStatus = RC$NO.DATA
      responseContent = "[{{1}}] No Data Found '{{2}}' '{{3}}'"
      CALL U_MSG(responseContent, RC$NO.DATA:@AM:requestItem:@AM:requestParameters)
   END


   CALL U_CRT.INFO("requestItem", requestItem) ; CALL U_CRT.INFO("requestParameters", requestParameters) ; CALL U_CRT.INFO("msgPayload", msgPayload)


   CALL U_STOP(PROCESS.NAME)
   RETURN
END
