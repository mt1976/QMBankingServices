SUBROUTINE SIENA.ECB.HELPER(PROCESS.NAME)
$INCLUDE UTIL.BP TRANSLATE.H
$INCLUDE UTIL.BP RATECSV.H

* INITIALISE
   PREFIX = PROCESS.NAME
   CALL M.START(PROCESS.NAME)
* Setup some temp locations for input data

   ERROR.TEXT = ""; STOP.ON.ERROR = @TRUE ; VERBOSE = @TRUE
* OPEN FILES
   FN.SIENA.STAGING = "SIENA.STAGING" ; FV.SIENA.STAGING = ""
   CALL M.OPENFILE(FN.SIENA.STAGING, FV.SIENA.STAGING, STOP.ON.ERROR, ERROR.TEXT)
   FN.SIENA.CONFIG = "SIENA.CONFIG" ; FV.SIENA.CONFIG = ""
   CALL M.OPENFILE(FN.SIENA.CONFIG, FV.SIENA.CONFIG, STOP.ON.ERROR, ERROR.TEXT)


   OUTPUT.DATA = ""

   XML.REC = ""
   SIENA.ACTION = "IMPORT"
   SIENA.TABLE.NAME = "NegotiableInstrument"
   CALL SIENA.XML.HEADER(XML.REC, SIENA.ACTION, SIENA.TABLE.NAME)

   CALL M.HEADER("SIENA - ":PREFIX)

   API.KEY = ""
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uri",URI)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uriSeries",SERIES.LABEL)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","apiKey",API.KEY)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uriApiKey",API.LABEL)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uriStartDate",START.LABEL)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uriEndDate",END.LABEL)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uriFileType",FILE.LABEL)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","filetype",FILE.TYPE)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","seriesListID",seriesListID)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","dateFormat",dateFormat)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","uriObs",OBS.LABEL)
      CALL M.GET.PROPERTY("SIENA.CONFIG","fred","currency",CURRENCY)

      CALL M.CRT.ACTION("URI",URI)
      CALL M.CRT.ACTION("APIKEY",API.KEY)
      CALL M.CRT.ACTION("seriesListID",seriesListID)
      CALL M.CRT.ACTION("dateFormat",dateFormat)
      seriesList = ""
      CALL M.READ(FV.SIENA.CONFIG, seriesListID, seriesList, STOP.ON.ERROR, ERROR.TEXT)

    *  CALL M.CRT.RECORD(seriesList)
DATE.START = OCONV(DATE()-2,dateFormat)

DATE.STOP = OCONV(DATE()-1,dateFormat)

      NO.SERIES = DCOUNT(seriesList,@AM)
      FOR THIS.SERIES = 1 TO NO.SERIES
        fetchSeries=seriesList<THIS.SERIES>
        CALL M.CRT.ACTION("FETCH",fetchSeries)

        uri1=URI
        uri2=SERIES.LABEL:"=":fetchSeries
        uri3="&api_key=":API.KEY
        uri4="&":START.LABEL:"=":DATE.START
        uri5="&":END.LABEL:"=":DATE.STOP
        uri6="&":FILE.LABEL:"=":FILE.TYPE

        request_cmd=uri1:uri2:uri3:uri4:uri5:uri6

        * CRT request_cmd
    *    CALL M.CRT.ACTION("REQUEST",request_cmd)

        CALL M.CURL(request_cmd, VERBOSE, R.SIENA.TEMP, ID.SIENA.TEMP)

        JSON.OBJ = JPARSE(R.SIENA.TEMP)
        NO.OBS = JSON.OBJ {'count'}

        SIZE = INMAT(JSON.OBJ{'observations'})

        LAST.RATE = JSON.OBJ{'observations',SIZE,'value'}
        *OBSERVATIONS = EXPAND(JSON.OBJ{'observations'})
        *CRT OBSERVATIONS
        *LAST.RATE = OBSERVATIONS{'value', 10}


        CALL M.CRT.ACTION("NO.OBS",NO.OBS:"*":SIZE)
        CALL M.CRT.ACTION("LAST.RATE",LAST.RATE)
        *CALL M.CRT.ACTION("RETURNID",ID.SIENA.TEMP)
        *CALL M.CRT.RECORD(R.SIENA.TEMP)


        RATE = LAST.RATE

        IF CURRENCY <> "" AND RATE <> "" THEN

           CALL M.CRT.ACTION(CURRENCY, RATE)
           CALL M.TRANSLATE("FEDNAME", fetchSeries , TRNS.RVSERVER, LONG.NAME)
           CALL SIENA.NI.NAME(LONG.NAME,"","")



           GOSUB DO.CONTRACT
           GOSUB DO.PRICE


        END



      NEXT THIS.SERIES

   IF OUTPUT.DATA <> "" THEN


      CALL SIENA.XML.FOOTER(XML.REC)
      ID.SIENA.STAGING.XML=PREFIX:"_NI.xml"
      CALL M.CRT.ACTION("DELETE", ID.SIENA.STAGING.XML)
      CALL M.DELETE(FV.SIENA.STAGING, ID.SIENA.STAGING.XML, STOP.ON.ERROR, ERROR.TEXT)
      CALL M.WRITE(FV.SIENA.STAGING, ID.SIENA.STAGING.XML, XML.REC, STOP.ON.ERROR, ERROR.TEXT)

      ID.SIENA.STAGING.RV = "RV":PREFIX
      CALL M.CRT.ACTION("DELETE", ID.SIENA.STAGING.RV)
      CALL M.DELETE(FV.SIENA.STAGING, ID.SIENA.STAGING.RV, STOP.ON.ERROR, ERROR.TEXT)
      CALL M.CRT.ACTION("STORE", ID.SIENA.STAGING.RV)
      CALL M.WRITE(FV.SIENA.STAGING, ID.SIENA.STAGING.RV, OUTPUT.DATA, STOP.ON.ERROR, ERROR.TEXT)
   END

   CALL M.CRT.ACTION("PROCESSING", "COMPLETE")
   CALL M.STOP(PROCESS.NAME)
   RETURN

DO.PRICE:

GILT.PRICE = RATE+0
GILT.PRICE = GILT.PRICE"L#11"
OUTPUT.DATA<-1> = LONG.NAME"L#30":"+":GILT.PRICE:"+":GILT.PRICE

RETURN

DO.CONTRACT:
XML.REC<-1>="<RECORD>"

CALL SIENA.XML.FIELD(XML.REC, "KEYFIELD", "name", LONG.NAME)
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "status", "Active")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "type", "TREASURY BILL")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "currencyCode", "USD")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "issuer.firm", "UKTR")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "issuer.centre", "LON")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "acceptor.firm", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "acceptor.centre", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "issueDate", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "maturityDate", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "rateType", "Fixed")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "couponRate", RATE)
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "interestBasis", "Actual 365")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "interestFrequency", "None")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "clearingSystem", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "parentDealType", "Treasury Bill")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "securityID", fetchSeries)
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "encumbered", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "marketable", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "hypothecated", "")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "repoFactor", "100.00")
CALL SIENA.XML.FIELD(XML.REC, "FIELD", "lotSize", 1)
*CALL M.CRT.RECORD(XML.REC)
XML.REC<-1>="</RECORD>"
RETURN

END
