SUBROUTINE SIENA.ECB.HELPER(PROCESS.NAME)
** INFORMATION ****************************************************************
* Routine Name   : SIENA.ECB.HELPER
*         Type   : SUBROUTINE
*         Params : PROCESS.NAME
*         Loc    : SIENA.BP
** AUDIT **********************************************************************
* Info Updated   : 20200810 at 16.07.52 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE UTIL.BP F_UTIL.TRANSLATE.H
$INCLUDE UTIL.BP I_RATECSV.H
$INSERT UTIL.BP I_UTIL.H



* INITIALISE
  PROCESS.NAME = "SIENA.ECB.HELPER"
   CALL U_START(PROCESS.NAME)
* Setup some temp locations for input data
   CALL U_HEADER("SIENA - FX ECB SPOT")

   ERROR.TEXT = ""; STOP.ON.ERROR = @TRUE ; VERBOSE = @TRUE
* OPEN FILES
   FN.SIENA.IN = "SIENA.IN" ; FV.SIENA.IN = ""
   CALL U_IO.OPENFILE(FN.SIENA.IN, FV.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
   FN.SIENA.PROCESSED = "SIENA.PROCESSED" ; FV.SIENA.PROCESSED = ""
   CALL U_IO.OPENFILE(FN.SIENA.PROCESSED, FV.SIENA.PROCESSED, STOP.ON.ERROR, ERROR.TEXT)
   FN.SIENA.STAGING = "SIENA.STAGING" ; FV.SIENA.STAGING = ""
   CALL U_IO.OPENFILE(FN.SIENA.STAGING, FV.SIENA.STAGING, STOP.ON.ERROR, ERROR.TEXT)




   URI = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"
   CALL U_OS.CURL(URI, VERBOSE, RESPONSE.DATA, ID.SIENA.TEMP)

   CALL U_TRANSLATE("TENOR", "SP", U_TRNS.RVSERVER, OUT.TENOR)
   CALL U_TRANSLATE("RATETYPE", "FXSPOT", U_TRNS.RVSERVER, OUT.TYPE)

   NO.ROWS = DCOUNT(RESPONSE.DATA, @AM)
   OUTPUT.DATA = ""

   FOR I = 1 TO NO.ROWS

      TEST.DATA = CONVERT(" ", @AM, RESPONSE.DATA<I>)
      TEST.DATA = CONVERT("'", @VM, TEST.DATA)

      NO.ITEMS = DCOUNT(TEST.DATA, @AM)

      CURRENCY = TEST.DATA<2, 2>
      RATE = TEST.DATA<3, 2>

      IF CURRENCY <> "" AND RATE <> "" THEN
         CCYPAIR = "EUR":CURRENCY
         OUT.TENOR = ""

         OUT.CCYTN = OUT.TYPE:CCYPAIR"L#6":OUT.TENOR

         OUT.BUY = "D":RATE "L#11"
         OUT.SEL = "D":RATE "L#11"
         ROW.DATA = OUT.CCYTN:OUT.BUY:OUT.SEL

         CALL U_CRT.INFO(CURRENCY, RATE)

         OUTPUT.DATA<-1> = ROW.DATA
      END
   NEXT I

   IF OUTPUT.DATA <> "" THEN

      ID.SIENA.STAGING = "RVECB":U_SEP_ALT:"SOURCE"
      CALL U_CRT.INFO("DELETE", ID.SIENA.STAGING)
      CALL U_IO.DELETE(FV.SIENA.STAGING, ID.SIENA.STAGING, STOP.ON.ERROR, ERROR.TEXT)
      CALL U_CRT.INFO("STORE", ID.SIENA.STAGING)
      CALL U_CRT.RECORD(OUTPUT.DATA)
      CALL U_IO.WRITE(FV.SIENA.STAGING, ID.SIENA.STAGING, OUTPUT.DATA, "", "")
      CALL U_CRT.RECORD(OUTPUT.DATA)
      CALL U_IO.WRITE(FV.SIENA.STAGING, "TEMP", OUTPUT.DATA, "", "")

   END

   CALL U_CRT.INFO("PROCESSING", "COMPLETE")
   CALL U_STOP(PROCESS.NAME)

   RETURN

DO.PROCESS.DATA:

   OUTPUT.DATA = ""     ;* INIT THE RATES FILE
   LOOP
      READNEXT ID.SIENA.IN ELSE EXIT

      CALL U_CRT.INFO("PROCESSING", ID.SIENA.IN)
      R.SIENA.IN = ""
      CALL U_IO.READ(FV.SIENA.IN, ID.SIENA.IN, R.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)

      NO.ROWS = DCOUNT(R.SIENA.IN, @FM)

      INPUT.DATA = CONVERT(",", @VM, R.SIENA.IN)

      FOR THIS.ROW = 1 TO NO.ROWS
         IF INPUT.DATA<THIS.ROW, 1> <> "" THEN

            CCYPAIR = INPUT.DATA<THIS.ROW, RATE.CCY1>:INPUT.DATA<THIS.ROW, RATE.CCY2>
            TMP.TENOR = INPUT.DATA<THIS.ROW, RATE.TENOR>
            OUT.TENOR = ""
            CALL U_TRANSLATE("TENOR", TMP.TENOR, U_TRNS.RVSERVER, OUT.TENOR)
            CALL U_TRANSLATE("RATETYPE", INPUT.DATA<THIS.ROW, RATE.TYPE>, U_TRNS.RVSERVER, OUT.TYPE)
            OUT.CCYTN = OUT.TYPE:CCYPAIR"L#6":OUT.TENOR

            OUT.BUY = "D":INPUT.DATA<THIS.ROW, RATE.BUY> "L#11"
            OUT.SEL = "D":INPUT.DATA<THIS.ROW, RATE.SELL> "L#11"
            ROW.DATA = OUT.CCYTN:OUT.BUY:OUT.SEL
            OUTPUT.DATA<-1> = ROW.DATA

         END

      NEXT THIS.ROW
      ID.SIENA.PROCESSED = ID.SIENA.IN
      CALL U_GET.UUID(ID.SIENA.PROCESSED)
      CALL U_IO.WRITE(FV.SIENA.PROCESSED, ID.SIENA.PROCESSED, R.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
      CALL U_IO.DELETE(FV.SIENA.IN, ID.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
   REPEAT
   RETURN
END
