SUBROUTINE W_SERVICE.LOGIN(msgPayload, responseCode, responseMessage)
** INFORMATION ****************************************************************
*   Routine Name : W_SERVICE.LOGIN
*           Type : SUBROUTINE
*         Params : msgPayload, responseCode, responseMessage
*            Loc : BP
** AUDIT **********************************************************************
*   Info Updated : 20210301 at 15.47.19 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE BP I_HTTP.H
$INCLUDE BP F_UTIL.WCT.TOKENS.H

   PROCESS.NAME = "W_SERVICE.DO"
   wct_Properties = "wct_connect"

   CALL U_CRT.INFO("msgPayload", msgPayload)
   CALL U_CRT.INFO("responseCode", responseCode)
   CALL U_CRT.INFO("responseMessage", responseMessage)

   username = "" ; CALL W_BUNDLE.GET(msgPayload, "username", username) ; CALL U_CRT.INFO("username", username)
   password = "" ; CALL W_BUNDLE.GET(msgPayload, "password", password) ; CALL U_CRT.INFO("password", password)
   applicationToken = "" ; CALL W_BUNDLE.GET(msgPayload, "appToken", applicationToken) ; CALL U_CRT.INFO("applicationToken", applicationToken)
   ipUser = "" ; CALL W_BUNDLE.GET(msgPayload, "ipUser", ipUser) ; CALL U_CRT.INFO("ipUser", ipUser)
   hostUser = "" ; CALL W_BUNDLE.GET(msgPayload, "hostUser", hostUser) ; CALL U_CRT.INFO("hostUser", hostUser)

   ipWebServer = "" ; CALL W_BUNDLE.GET(msgPayload, "ipWebServer", ipWebServer) ; CALL U_CRT.INFO("ipWebServer", ipWebServer)
   hostWebServer = "" ; CALL W_BUNDLE.GET(msgPayload, "hostWebServer", hostWebServer) ; CALL U_CRT.INFO("hostWebServer", hostWebServer)

   sessionTokenLife = 0 ; CALL U_IO.GET.PROPERTY("wct_connect", "sessionTokenLife", sessionTokenLife)


   STOP.ON.ERROR = @TRUE ; FV.TOKEN="" ; R.TOKEN=""
   CALL U_IO.OPENFILE(W$TOKEN.FILE.NAME, FV.TOKEN, STOP.ON.ERROR, "")

   masterAppToken = "" ; CALL U_IO.GET.PROPERTY(wct_Properties, "appToken", masterAppToken)
   CALL U_CRT.INFO("masterAppToken", masterAppToken)

   IF applicationToken = masterAppToken THEN

      R.TOKEN<W$TOKEN.APP.TOKEN> = masterAppToken
      R.TOKEN<W$TOKEN.CREATE.DATE> = DATE()
      R.TOKEN<W$TOKEN.CREATE.TIME> = TIME()
      R.TOKEN<W$TOKEN.UNIQUE.ID> = ""

      R.TOKEN<W$TOKEN.USERNAME> = username
      R.TOKEN<W$TOKEN.PASSWORD> = password
      R.TOKEN<W$TOKEN.USER.IP> = ipUser
      R.TOKEN<W$TOKEN.USER.HOST> = hostUser
      R.TOKEN<W$TOKEN.WS.IP> = ipWebServer
      R.TOKEN<W$TOKEN.WS.HOST> = hostWebServer
      IP4.ADDRESS = "" ; CALL U_GET.IP(IP4.ADDRESS)
      R.TOKEN<W$TOKEN.APP.IP> = IP4.ADDRESS
      R.TOKEN<W$TOKEN.APP.HOST> = SYSTEM(1015)
      R.TOKEN<W$TOKEN.ISSUED> = EPOCH()
      R.TOKEN<W$TOKEN.EXPIRY> = EPOCH() + sessionTokenLife


      sessionToken = "" ; CALL U_GEN.TOKEN(sessionToken)

      R.TOKEN<W$TOKEN.SESSION.TOKEN> = sessionToken

      ID.TOKEN = sessionToken

      CALL U_IO.WRITE(FV.TOKEN, ID.TOKEN, R.TOKEN, STOP.ON.ERROR, ERROR.TEXT)

      responseCode=RC$OK
      responseMessage=sessionToken
      CALL U_CRT.INFO("LOGIN", "SUCCESS")

   END ELSE

      responseCode=RC$SECURITY.VIOLATION
      CALL U_MSG(responseMessage, RC$SECURITY.VIOLATION)
      CALL U_CRT.INFO("LOGIN", responseMessage)

   END

*   CALL U_CRT.INFO("applicationToken", applicationToken)
*   CALL U_CRT.INFO("uniqueID", uniqueID)
* CALL U_CRT.INFO("spare01", spare01)
*   CALL U_CRT.INFO("sessionToken", sessionToken)
   CALL U_CRT.INFO("responseCode", responseCode)
   CALL U_CRT.INFO("responseMessage", responseMessage)

   RETURN
END
