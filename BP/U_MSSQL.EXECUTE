SUBROUTINE U_MSSQL.EXECUTE(SQL.STATEMENT, SQL.ADDRESS, SQL.DATABASE, VERBOSE, ID_UTIL.SQL.RESPONSE)
** INFORMATION ****************************************************************
*   Routine Name : U_MSSQL.EXECUTE
*           Type : SUBROUTINE
*         Params : SQL.STATEMENT, SQL.ADDRESS, SQL.DATABASE, VERBOSE, ID_UTIL.SQL.RESPONSE
*            Loc : BP
** AUDIT **********************************************************************
*   Info Updated : 20210411 at 16.25.52 in MWT-QM-DEV by matttownsend
*                : on silicon.local (Mac)
*******************************************************************************

$INCLUDE BP I_UTIL.H
$INCLUDE BP F_UTIL.LOG.EVENT.H
$INCLUDE BP F_UTIL.SQL.CMD.H
$INCLUDE BP F_UTIL.SQL.SCRIPTS.H
$INCLUDE BP F_UTIL.SQL.RESPONSE.H


* SQL SERVER
* -------------------
* Uses a headless MS SQL server commandline to scrape fully rendered results from MS SQL Server
* OPEN FILES START
   FN_UTIL.SQL.CMD = U_SQLCMD.FILE.NAME
   FV_UTIL.SQL.CMD = ""
   FP_UTIL.SQL.CMD = ""
   STOP.ON.ERROR = @TRUE
   ERROR.TEXT = ""
   CALL U_IO.OPENFILE(FN_UTIL.SQL.CMD, FV_UTIL.SQL.CMD, STOP.ON.ERROR, ERROR.TEXT)
   CALL U_OS.FILE.PATH(FV_UTIL.SQL.CMD, FP_UTIL.SQL.CMD)
   CALL U_CRT.INFO(FN_UTIL.SQL.CMD, FP_UTIL.SQL.CMD)
   FN_UTIL.SQL.RESPONSE = U_SQLREP_FILE.NAME
   FV_UTIL.SQL.RESPONSE = ""
   FP_UTIL.SQL.RESPONSE = ""
   STOP.ON.ERROR = @TRUE
   ERROR.TEXT = ""
   CALL U_IO.OPENFILE(FN_UTIL.SQL.RESPONSE, FV_UTIL.SQL.RESPONSE, STOP.ON.ERROR, ERROR.TEXT)
   CALL U_OS.FILE.PATH(FV_UTIL.SQL.RESPONSE, FP_UTIL.SQL.RESPONSE)
* OPEN FILES END
   CALL U_CRT.INFO(FN_UTIL.SQL.RESPONSE, FP_UTIL.SQL.RESPONSE)
* Get the location of the chrome executable;
   SQL.AGENT = "" ; SQL.USERNAME = "" ; SQL.PASSWORD = "" ; SQL.DEFAULTIP = "" ; SQL.DEFAULTDB = "";
   CALL U_IO.GET.PROPERTY("mssql", "command", SQL.AGENT)
   CALL U_IO.GET.PROPERTY("mssql", "username", SQL.USERNAME)
   CALL U_IO.GET.PROPERTY("mssql", "password", SQL.PASSWORD)
   CALL U_IO.GET.PROPERTY("mssql", "server", SQL.DEFAULTIP)
   CALL U_IO.GET.PROPERTY("mssql", "defaultdb", SQL.DEFAULTDB)

   IF SQL.DATABASE = "" THEN SQL.DATABASE = SQL.DEFAULTDB
   IF SQL.ADDRESS = "" THEN SQL.ADDRESS = SQL.DEFAULTIP

   CALL U_CRT.INFO("SQL.AGENT", SQL.AGENT)
   CALL U_CRT.INFO("SQL.USERNAME", SQL.USERNAME)
   CALL U_CRT.INFO("SQL.PASSWORD", SQL.PASSWORD)
   CALL U_CRT.INFO("SQL.ADDRESS", SQL.ADDRESS)
   CALL U_CRT.INFO("SQL.DEFAULTDB", SQL.DEFAULTDB)
   CALL U_CRT.INFO("SQL.DATABASE", SQL.DATABASE)
   CALL U_CRT.INFO("MSSQL.FETCH", "START")

   CALL U_GET.UUID(ID_UNIQUE)
   TEMP.LEN = LEN(ID_UNIQUE)-4
   ID_UTIL.SQL.CMD = LEFT(ID_UNIQUE, TEMP.LEN):".sql"
   ID_UTIL.SQL.RESPONSE = LEFT(ID_UNIQUE, TEMP.LEN):".out"

   CALL U_CRT.INFO("MSSQL.COMMAND ", ID_UTIL.SQL.CMD)
   CALL U_CRT.INFO("MSSQL.RESPONSE", ID_UTIL.SQL.RESPONSE)

   STMT.EX = SQL.AGENT
   STMT.EX = STMT.EX:" -S ":SQL.ADDRESS
   STMT.EX = STMT.EX:" -d ":SQL.DATABASE
   STMT.EX = STMT.EX:" -U ":SQL.USERNAME
   STMT.EX = STMT.EX:" -P ":SQL.PASSWORD
   STMT.EX = STMT.EX:" -i ":FP_UTIL.SQL.CMD:"/":ID_UTIL.SQL.CMD
   STMT.EX = STMT.EX:" -o ":FP_UTIL.SQL.RESPONSE:"/":ID_UTIL.SQL.RESPONSE

* The last part tells MSSQL to output in CSV and use commas.
   CALL U_CRT.INFO("STMT.EX", @(T$BOLD_ON):STMT.EX:@(T$BOLD_OFF))
   R.UTIL.SQL.CMD = ""
   R.UTIL.SQL.CMD<U_SQLCMD.COMMAND> = SQL.STATEMENT

   CALL U_IO.WRITE(FV_UTIL.SQL.CMD, ID_UTIL.SQL.CMD, R.UTIL.SQL.CMD, STOP.ON.ERROR, ERROR.TEXT)

   TIME.START = TIME()

   CALL U_CRT.INFO("START", "START @ ":OCONV(TIME.START, "MTS."))

   OS.EXECUTE STMT.EX CAPTURING RESULT

   TIME.STOP = TIME()
   TIME.ELAPSED = TIME.STOP - TIME.START

   CALL U_CRT.INFO("STOP", "STOP    @ ":OCONV(TIME.START, "MTS."))
   CALL U_CRT.INFO("ELAPSED", "ELAPSED @ ":@(T$BOLD_ON):OCONV(TIME.ELAPSED, "MTS."):@(T$BOLD_OFF))
   CALL U_CRT.INFO("MSSQL.EX", "STOP")

   R.EVENT = ""
   R.EVENT<U_LOG_EVENT> = "MSSQL.EXECUTE"
   R.EVENT<U_LOG_CMD> = SQL.STATEMENT
   R.EVENT<U_LOG_MSG> = STMT.EX
   R.EVENT<U_LOG_RETCD> = @SYSTEM.RETURN.CODE
   R.EVENT<U_LOG_SUBR> = "U_MSSQL.EXECUTE"
   R.EVENT<U_LOG_START> = OCONV(TIME.START, "MTS.")
   R.EVENT<U_LOG_STOP> = OCONV(TIME.STOP, "MTS.")
   R.EVENT<U_LOG_ELAPSED> = OCONV(TIME.ELAPSED, "MTS.")

   CALL U_LOG.EVENT(RESULT, R.EVENT)

   RETURN
END
