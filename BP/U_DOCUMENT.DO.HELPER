SUBROUTINE U_DOCUMENT.DO.HELPER(FN.ITEM, ID.ITEM, DO.TYPE, FV.ITEM, DOC.DETAIL)
** INFORMATION ****************************************************************
*   Routine Name : U_DOCUMENT.DO.HELPER
*           Type : SUBROUTINE
*         Params : FN.ITEM, ID.ITEM, DO.TYPE, FV.ITEM, DOC.DETAIL
*            Loc : BP
** AUDIT **********************************************************************
*   Info Updated : 20210301 at 15.20.48 in DEV by root
*                : on mercury.local (Mac)
*******************************************************************************

$INCLUDE BP I_UTIL.H

   PROCESS.NAME = "U_DOCUMENT.DO.HELPER"

* USAGE Used to build markdown help files.

   FN.DOCS = "" ; FN.DOCS.PAGES = ""
   CALL U_IO.GET.PROPERTY("docs", "root", FN.DOCS)
   CALL U_IO.GET.PROPERTY("docs", "pages", FN.DOCS.PAGES)
   TXT.DATA=""
   TXT.VALUE=""
   TXT.TYPE=""
   TXT.SOURCE=""
   TXT.ID=""
   TXT.LINK=""
   TXT.BACK=""
   TXT.PARMETERS=""
   TXT.INFORMATION=""
   TXT.REQUIRES=""
   TXT.BODY=""
   TXT.USAGE=""
   TXT.CALLS=""
   TXT.INTERNAL=""
   TXT.NOTES=""

   CALL U_TRANSLATE("docs", "DATA", 1, TXT.DATA)
   CALL U_TRANSLATE("docs", "VALUE", 1, TXT.VALUE)
   CALL U_TRANSLATE("docs", "TYPE", 1, TXT.TYPE)
   CALL U_TRANSLATE("docs", "SOURCE", 1, TXT.SOURCE)
   CALL U_TRANSLATE("docs", "ID", 1, TXT.ID)
   CALL U_TRANSLATE("docs", "LINK", 1, TXT.LINK)
   CALL U_TRANSLATE("docs", "BACK", 1, TXT.BACK)
   CALL U_TRANSLATE("docs", "PARAMETERS", 1, TXT.PARAMETERS)
   CALL U_TRANSLATE("docs", "INFORMATION", 1, TXT.INFORMATION)
   CALL U_TRANSLATE("docs", "REQUIRES", 1, TXT.REQUIRES)
   CALL U_TRANSLATE("docs", "BODY", 1, TXT.BODY)
   CALL U_TRANSLATE("docs", "USAGE", 1, TXT.USAGE)
   CALL U_TRANSLATE("docs", "CALLS", 1, TXT.CALLS)
   CALL U_TRANSLATE("docs", "INTERNAL CALLS", 1, TXT.INTERNAL)
   CALL U_TRANSLATE("docs", "NOTES", 1, TXT.NOTES)



   *             CALL U_TRANSLATE("docs", "DATA", 1, TXT.DATA)


   DOC_THEME = "" ; DOC_THEME_PATH = ""
   CALL U_IO.GET.PROPERTY("docs", "themeName", DOC_THEME)
   CALL U_IO.GET.PROPERTY("docs", "themeLocation", DOC_THEME_PATH)
   DOC_THEME_PATH = "../":DOC_THEME_PATH:"/"

   DOC_RES_BACK = ""
   DOC_RES_LINK = ""
   DOC_RES_APP = ""

   CALL U_IO.GET.PROPERTY(DOC_THEME, "docBack", DOC_RES_BACK)
   CALL U_IO.GET.PROPERTY(DOC_THEME, "docLink", DOC_RES_LINK)
   CALL U_IO.GET.PROPERTY(DOC_THEME, "applicationIcon", DOC_RES_APP)

   DOC_RES_BACK = DOC_THEME_PATH:DOC_THEME:"/":DOC_RES_BACK
   DOC_RES_LINK = DOC_THEME_PATH:DOC_THEME:"/":DOC_RES_LINK
   DOC_RES_APP = DOC_THEME_PATH:DOC_THEME:"/":DOC_RES_APP

   FV.DOCS = ""
   CALL U_IO.OPENFILE(FN.DOCS, FV.DOCS, @TRUE, "")

   FV.DOCS.PAGES = ""
   CALL U_IO.OPENFILE(FN.DOCS.PAGES, FV.DOCS.PAGES, @TRUE, "")

   CALL U_CRT.INFO("DOCUMENT", DO.TYPE:" ":FN.ITEM:" ":ID.ITEM)
   SNIPIT = "PROCESSED ":DO.TYPE:" ":ID.ITEM:" ":FN.ITEM
   R.REC = ""
   CALL U_IO.READ(FV.ITEM, ID.ITEM, R.REC, @TRUE, "")

   SNIPIT = MD$H2:ID.ITEM:MD$BR

   NO.LINES = DCOUNT(R.REC, @AM)

   LINE1 = CHANGE(R.REC<1>, "(", @AM)
   LINE1 = CHANGE(LINE1, ")", @AM)
   PARAM.LIST=LINE1<2>
   IF DO.TYPE = MD$SUBR THEN
      SNIPIT<-1> = TXT.PARAMETERS:" : ":PARAM.LIST:MD$BR
   END

   ID.PAGE = ID.ITEM:MD$SUFFIX
   ID.BACK = FN.ITEM:MD$SUFFIX
*   SNIPIT<-1> = "![":TXT.LINK:"](":DOC_RES_LINK:")

*   "[":TXT.LINK:"](../":FN.DOCS.PAGES:"/":ID.PAGE:")":MD$BR


   SNIPIT<-1>='<img src="':DOC_RES_LINK:'" alt="':TXT.LINK:'" width="25" />':"[":TXT.LINK:"](../":FN.DOCS.PAGES:"/":ID.PAGE:")":MD$BR


   IF DOC.DETAIL = "" THEN
      DOC.DETAIL = SNIPIT
   END ELSE
      DOC.DETAIL := @AM:SNIPIT
   END

   PAGE.REC = ""
   PAGE.REC<-1>='<img src="':DOC_RES_BACK:'" alt="':TXT.BACK:'" width="25" />':"[":TXT.BACK:"](../":FN.DOCS:"/":ID.BACK:")":MD$BR
   PAGE.REC<-1> = MD$H1:ID.ITEM:MD$BR
   PAGE.REC<-1> = MD$TC:TXT.DATA:MD$TC:TXT.VALUE:MD$TC
   PAGE.REC<-1> = MD$TC:MD$TR:MD$TC:MD$TR:MD$TC
   PAGE.REC<-1> = MD$TC:TXT.TYPE:MD$TC:DO.TYPE:MD$TC

   SOURCE.LNK = '<img src="':DOC_RES_LINK:'" alt="':FN.ITEM:'" width="25" />':"[":FN.ITEM:"](../":FN.DOCS:"/":FN.ITEM:MD$SUFFIX:")"

   PAGE.REC<-1> = MD$TC:TXT.SOURCE:MD$TC:SOURCE.LNK:MD$TC
   PAGE.REC<-1> = MD$TC:TXT.ID:MD$TC:ID.ITEM:MD$TC

   BEGIN CASE
      CASE DO.TYPE = MD$PRG
         PAGE.REC<-1> = MD$BR:MD$BR
         GOSUB PROCESS.USAGE
         GOSUB PROCESS.INSERTS
         HEADER.START = 2 ; HEADER.END = 11 ; GOSUB PROCESS.HEADER
         GOSUB PROCESS.BODY

      CASE DO.TYPE = MD$HEADER
         PAGE.REC<-1> = MD$BR:MD$BR
         HEADER.START = 1 ; HEADER.END = 9 ; GOSUB PROCESS.HEADER
         PAGE.REC<-1> = MD$H2:TXT.BODY:MD$BR
         PAGE.REC<-1> = MD$CODE.START
         FOR K = HEADER.END TO DCOUNT(R.REC, @AM)
            PAGE.REC<-1> = R.REC<K>
         NEXT K

         PAGE.REC<-1> = MD$CODE.END


      CASE DO.TYPE = MD$SUBR

         PAGE.REC<-1> = MD$TC:TXT.PARAMETERS:MD$TC:PARAM.LIST:MD$TC
         PAGE.REC<-1> = MD$BR:MD$BR
         GOSUB PROCESS.USAGE
         GOSUB PROCESS.INSERTS
         HEADER.START = 2 ; HEADER.END = 11 ; GOSUB PROCESS.HEADER
         GOSUB PROCESS.BODY

* HEADER INFO
* COMMENTARTY

      CASE 1
         PAGE.REC<-1> = MD$BR:MD$BR
   END CASE

   CALL U_IO.WRITE(FV.DOCS.PAGES, ID.PAGE, PAGE.REC, @TRUE, "")

   RETURN


PROCESS.INSERTS:
** Process inserts, if line is prefixed $INSERT or $INCLUDE build output.
   PAGE.REC<-1> = MD$H2:TXT.REQUIRES:MD$BR
   FOR J = 1 TO NO.LINES
      DOC_TEST=MD$INCLUDE
      GOSUB PROCESS.INSERTS.ADD.MARKDOWN

      DOC_TEST=MD$INSERT
      GOSUB PROCESS.INSERTS.ADD.MARKDOWN
   NEXT J
   RETURN

PROCESS.INSERTS.ADD.MARKDOWN:
** Adds link to header file.
   LEN.DOC_TEST = LEN(DOC_TEST)
   IF R.REC<J>[1, LEN.DOC_TEST] = DOC_TEST THEN
      EXTRACT.TXT = CHANGE(R.REC<J>[LEN.DOC_TEST, 99], SPACE(1), @AM)<3>
*      PAGE.REC<-1> = EXTRACT.TXT
      ID.DDOWN = EXTRACT.TXT:MD$SUFFIX
      PAGE.REC<-1>='<img src="':DOC_RES_LINK:'" alt="':EXTRACT.TXT:'" width="25" />':"[":EXTRACT.TXT:"](../":FN.DOCS.PAGES:"/":ID.DDOWN:")":MD$BR

   END
   RETURN


PROCESS.HEADER:
   PAGE.REC<-1> = MD$BR:MD$BR
   PAGE.REC<-1> = MD$H2:TXT.INFORMATION:MD$BR
   PAGE.REC<-1> = MD$CODE.START
   FOR K = HEADER.START TO HEADER.END
      PAGE.REC<-1> = R.REC<K>
   NEXT K
   PAGE.REC<-1> = MD$CODE.END

   RETURN

PROCESS.BODY:

   SUBR.LIST = ""
   PAGE.REC<-1> = MD$H2:TXT.BODY:MD$BR
   PAGE.REC<-1> = MD$H3:TXT.CALLS:MD$BR
   GOSUB PROCESS.BODY.CALLS
   PAGE.REC<-1> = MD$H3:TXT.NOTES:MD$BR
   LEN.MD$COMMENT = LEN(MD$COMMENT)
   FOR L = HEADER.END TO NO.LINES
      IF RIGHT(R.REC<L>, 1) = ":" THEN
         PAGE.REC<-1> = MD$H4:R.REC<L>:MD$BR
         PAGE.REC<-1> = MD$BR
      END
      IF R.REC<L>[1, LEN.MD$COMMENT]=MD$COMMENT THEN
         PAGE.REC<-1> = R.REC<L>[LEN.MD$COMMENT, 99]:MD$BR:MD$BR
         PAGE.REC<-1> = MD$BR
      END
   NEXT L
   PAGE.REC<-1> = MD$BR
   RETURN

PROCESS.BODY.CALLS:
   FOR N = HEADER.END TO NO.LINES
      TEST.TXT = CHANGE(TRIM(R.REC<N>, SPACE(1), ""), SPACE(1), @AM)

      IF TEST.TXT<1> = MD$CALL THEN
         TEST.CALL = CHANGE(TEST.TXT<2>, "(", @AM)<1>
         *CALL U_CRT.INFO("TEST", MD$CALL)
         *CALL U_CRT.INFO("TEXT", TEST.TXT<1>)
         *CALL U_CRT.INFO("CALL", TEST.CALL)
         LOCATE TEST.CALL IN SUBR.LIST<1> BY "AL" SETTING POS THEN
            * DO NOTHING
         END ELSE
            SUBR.LIST<POS> = TEST.CALL
            PAGE.REC<-1>='<img src="':DOC_RES_LINK:'" alt="':TEST.CALL:'" width="25" />':"[":TEST.CALL:"](../":FN.DOCS.PAGES:"/":TEST.CALL:MD$SUFFIX:")":MD$BR
         END
      END
   NEXT N
   RETURN

PROCESS.USAGE:
   SNIPIT<-1> = MD$H2:TXT.USAGE:MD$BR
   PAGE.REC<-1> = MD$H2:TXT.USAGE:MD$BR
   LEN.MD$USAGE = LEN(MD$USAGE)
   FOR M = 1 TO NO.LINES
      IF R.REC<M>[1, LEN.MD$USAGE]=MD$USAGE THEN
         PAGE.REC<-1> = MD$LIST:R.REC<M>[LEN.MD$USAGE, 99]:MD$BR
         SNIPIT<-1> = MD$LIST:R.REC<M>[LEN.MD$USAGE, 99]
      END
   NEXT M
   PAGE.REC<-1> = MD$BR
   RETURN
END
