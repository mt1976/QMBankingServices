SUBROUTINE U_OS.EXECUTE(STMT, ACTIONS)
** INFORMATION ****************************************************************
*   Routine Name : U_OS.EXECUTE
*           Type : SUBROUTINE
*         Params : STMT, ACTIONS
*            Loc : BP
** AUDIT **********************************************************************
*   Info Updated : 20210411 at 16.25.52 in MWT-QM-DEV by matttownsend
*                : on silicon.local (Mac)
*******************************************************************************

$INCLUDE BP I_UTIL.H
$INCLUDE BP F_UTIL.LOG.EVENT.H

   USE.STMT = STMT

*   CALL U_CRT.INFO("STMT", STMT)
*   CALL U_CRT.RECORD(ACTIONS)
   IF ACTIONS<1> = @TRUE THEN
      CALL U_CRT.INFO("EXECUTE", @(T$BOLD_ON):USE.STMT:@(T$BOLD_OFF))
   END

   BEGIN CASE
      CASE ACTIONS<1> = @TRUE
         EXECUTE USE.STMT CAPTURING OUTPUT
         CALL U_CRT.RECORD(OUTPUT)
      CASE ACTIONS<1> = "STORE"
         EXECUTE USE.STMT CAPTURING OUTPUT
         filePath = ACTIONS<2>
         fileID = ACTIONS<3>
         FV.REPORTS = ""
         CALL U_IO.OPENFILEPATH(filePath, FV.REPORTS, @TRUE, "")
         CALL U_CLEAN.TEXT(OUTPUT)
         CALL U_IO.WRITE(FV.REPORTS, fileID, OUTPUT, @TRUE, "")
         *CALL U_CRT.INFO("STORE", fileID)
         *CALL U_CRT.INFO("LOCATION", filePath)
      CASE 1
         HUSH ON
         EXECUTE USE.STMT SILENT
         HUSH OFF
   END CASE

   IF ACTIONS<1> <> "SILENT" THEN
      R.EVENT = ""
      R.EVENT<U_LOG_EVENT> = "EXECUTE"
      R.EVENT<U_LOG_MSG> = USE.STMT
      R.EVENT<U_LOG_CMD> = USE.STMT
      R.EVENT<U_LOG_RETCD> = @SYSTEM.RETURN.CODE
      R.EVENT<U_LOG_SUBR> = "U_OS.EXECUTE"
      CALL U_LOG.EVENT("", R.EVENT)
   END

   RETURN
END
