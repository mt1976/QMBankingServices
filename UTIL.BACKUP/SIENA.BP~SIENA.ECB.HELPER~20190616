SUBROUTINE SIENA.ECB.HELPER(PROCESS.NAME)
$INCLUDE UTIL.BP TRANSLATE.H
$INCLUDE UTIL.BP I_RATECSV.H

* INITIALISE
   CALL U_START(PROCESS.NAME)
* Setup some temp locations for input data


   ERROR.TEXT = ""; STOP.ON.ERROR = @TRUE ; VERBOSE = @TRUE
* OPEN FILES
   FN.SIENA.IN = "SIENA.IN" ; FV.SIENA.IN = ""
   CALL U_OPENFILE(FN.SIENA.IN, FV.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
   FN.SIENA.PROCESSED = "SIENA.PROCESSED" ; FV.SIENA.PROCESSED = ""
   CALL U_OPENFILE(FN.SIENA.PROCESSED, FV.SIENA.PROCESSED, STOP.ON.ERROR, ERROR.TEXT)
   FN.SIENA.STAGING = "SIENA.STAGING" ; FV.SIENA.STAGING = ""
   CALL U_OPENFILE(FN.SIENA.STAGING, FV.SIENA.STAGING, STOP.ON.ERROR, ERROR.TEXT)

   CALL U_HEADER("SIENA - FX ECB SPOT")


   URI = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"
   CALL U_OS.CURL(URI, VERBOSE, R.SIENA.TEMP, ID.SIENA.TEMP)

   NO.ROWS = DCOUNT(R.SIENA.TEMP, @AM)
   OUTPUT.DATA = ""

   FOR I = 1 TO NO.ROWS

      * GOSUB DO.PROCESS.DATA

      TEST.DATA = CONVERT(" ", @AM, R.SIENA.TEMP<I>)
      TEST.DATA = CONVERT("'", @VM, TEST.DATA)



*CRT TEST.DATA

      NO.ITEMS = DCOUNT(TEST.DATA, @AM)

*CALL U_CRT.INFO('EXTRACTI',TEST.DATA)
      CURRENCY = TEST.DATA<2, 2>
      RATE = TEST.DATA<3, 2>

      IF CURRENCY <> "" AND RATE <> "" THEN
         CCYPAIR = "EUR":CURRENCY
         OUT.TENOR = ""
         CALL U_TRANSLATE("TENOR", "SP", TRNS.RVSERVER, OUT.TENOR)
         CALL U_TRANSLATE("RATETYPE", "FXSPOT", TRNS.RVSERVER, OUT.TYPE)
         OUT.CCYTN = OUT.TYPE:CCYPAIR"L#6":OUT.TENOR

         OUT.BUY = "D":RATE "L#11"
         OUT.SEL = "D":RATE "L#11"
         ROW.DATA = OUT.CCYTN:OUT.BUY:OUT.SEL

         CALL U_CRT.INFO(CURRENCY, RATE)

         OUTPUT.DATA<-1> = ROW.DATA
      END


   NEXT I

   IF OUTPUT.DATA <> "" THEN
      ID.SIENA.STAGING = "RVECB"
      CALL U_CRT.INFO("DELETE", ID.SIENA.STAGING)
      CALL U_DELETE(FV.SIENA.STAGING, ID.SIENA.STAGING, STOP.ON.ERROR, ERROR.TEXT)
      CALL U_CRT.INFO("STORE", ID.SIENA.STAGING)
      CALL U_WRITE(FV.SIENA.STAGING, ID.SIENA.STAGING, OUTPUT.DATA, STOP.ON.ERROR, ERROR.TEXT)
   END

   CALL U_CRT.INFO("PROCESSING", "COMPLETE")
   CALL U_STOP(PROCESS.NAME)
   RETURN

DO.PROCESS.DATA:

   *   STMT = "SELECT ":FN.SIENA.IN:" WITH @ID LIKE fx_SP_rates..."
   *   CALL U_OS.EXECUTE(STMT, VERBOSE)
   OUTPUT.DATA = ""     ;* INIT THE RATES FILE
   LOOP
      READNEXT ID.SIENA.IN ELSE EXIT

      CALL U_CRT.INFO("PROCESSING", ID.SIENA.IN)
      R.SIENA.IN = ""
      CALL U_READ(FV.SIENA.IN, ID.SIENA.IN, R.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
      *CALL U_CRT.INFO("RECORD",R.SIENA.IN)

      NO.ROWS = DCOUNT(R.SIENA.IN, @FM)
      *CALL U_CRT.INFO("ROWS",NO.ROWS)

      INPUT.DATA = CONVERT(",", @VM, R.SIENA.IN)

      FOR THIS.ROW = 1 TO NO.ROWS
         IF INPUT.DATA<THIS.ROW, 1> <> "" THEN

            *CALL U_CRT.INFO("CCY1",INPUT.DATA<THIS.ROW,RATE.CCY1>)
            *CALL U_CRT.INFO("CCY2",INPUT.DATA<THIS.ROW,RATE.CCY2>)
            CCYPAIR = INPUT.DATA<THIS.ROW, RATE.CCY1>:INPUT.DATA<THIS.ROW, RATE.CCY2>
            TMP.TENOR = INPUT.DATA<THIS.ROW, RATE.TENOR>
            OUT.TENOR = ""
            CALL U_TRANSLATE("TENOR", TMP.TENOR, TRNS.RVSERVER, OUT.TENOR)
            CALL U_TRANSLATE("RATETYPE", INPUT.DATA<THIS.ROW, RATE.TYPE>, TRNS.RVSERVER, OUT.TYPE)
            OUT.CCYTN = OUT.TYPE:CCYPAIR"L#6":OUT.TENOR

            * CALL U_CRT.INFO("TCCT",OUT.CCYTN)
            OUT.BUY = "D":INPUT.DATA<THIS.ROW, RATE.BUY> "L#11"
            OUT.SEL = "D":INPUT.DATA<THIS.ROW, RATE.SELL> "L#11"
            * CALL U_CRT.INFO("BUY",OUT.BUY)
            * CALL U_CRT.INFO("SELL",OUT.SEL)
            ROW.DATA = OUT.CCYTN:OUT.BUY:OUT.SEL
            * CALL U_CRT.INFO("OUTPUT",ROW.DATA)
            OUTPUT.DATA<-1> = ROW.DATA

         END
         * INPUT.DATA = CONVERT("!", @FM, ID.RESTORE)



      NEXT THIS.ROW
      ID.SIENA.PROCESSED = ID.SIENA.IN
      CALL U_UNIQUE.ID(ID.SIENA.PROCESSED)
      *CALL U_CRT.INFO("STORE",ID.SIENA.PROCESSED)
      CALL U_WRITE(FV.SIENA.PROCESSED, ID.SIENA.PROCESSED, R.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
      CALL U_DELETE(FV.SIENA.IN, ID.SIENA.IN, STOP.ON.ERROR, ERROR.TEXT)
   REPEAT
   RETURN
END
